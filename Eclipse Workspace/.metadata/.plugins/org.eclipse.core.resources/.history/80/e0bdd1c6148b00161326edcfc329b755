import java.util.*;

public class EfficientMarkov implements MarkovInterface<String>{
	private static String PSEUDO_EOS = ""; //this is the variable letter will be set to if there is no EOS after...
										   //the 3-gram
	HashMap<String, ArrayList<String>> markMap = new HashMap<>(); //map to store data for the 3-gram data
	@Override
	public void setTraining(String text) {
		// TODO Auto-generated method stub
		String letter; //initializes the variable to store the extra letter after the 3-gram
		for(int i = 0; i < text.length() - 2; i++){ //this loop is meant to go through every letter except the last 2
			if(text.indexOf(text.substring(i +3)) == -1){
				letter = PSEUDO_EOS; //if the substring after i+3 does not exist then set the letter to Psuedo_EOS
			}
			else{
				letter = text.substring(i+3,i+3); //otherwise letter is the letter right after the 3-gram
			}
			String key = text.substring(i, i+2); //creates the 3-gram in order to use it as a key
			if(markMap.containsKey(key == null)){
				
			}
			markMap.put(text.substring(i, i+2), letter);
		}
	}

	@Override
	public String getRandomText(int length) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ArrayList<String> getFollows(String key) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int getOrder() {
		// TODO Auto-generated method stub
		return 0;
	}

}
